(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{364:function(t,a,s){"use strict";s.r(a);var n=s(42),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"浏览器内置对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器内置对象"}},[t._v("#")]),t._v(" 浏览器内置对象")]),t._v(" "),s("p",[t._v("浏览器是一个js的运行时环境，它基于JS解析器的同时，增加了许多环境相关的内容，用一张图表示各个运行环境和JS解析器的关系如下：")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/assets/img/browser.jpg"),alt:"关系图"}}),t._v(" "),s("p",[t._v("我们把常见的，能够用js这门语言控制的内容称为一个JS的运行环境，常见的运行环境有node.js，浏览器，小程序等等。所有的运行环境都必须含有一个JS的解释器，在解释器层面符合ECMASCRIPT规范，定义了Js 本身语言层面的东西，比如关键字，语法等等。")]),t._v(" "),s("p",[t._v("在每个环境中，也会基于JS加入一些自己环境的特性，比如Node.js中的"),s("strong",[t._v("globe对象")]),t._v("，"),s("strong",[t._v("process对象")]),t._v("，浏览器环境中的"),s("strong",[t._v("window对象")]),t._v("，"),s("strong",[t._v("document对象")]),t._v("等等。"),s("br"),t._v("\n这也就解释了为什么在node.js和浏览器中都能使用数组，函数，但是只能在node.js环境中使用require加载模块，而不能在浏览器中使用的原因，因为require是node.js的环境中特有的内容。")]),t._v(" "),s("h2",{attrs:{id:"内置对象属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内置对象属性"}},[t._v("#")]),t._v(" 内置对象属性")]),t._v(" "),s("p",[t._v("接下来主要针对的浏览器中的一些常见内置对象")]),t._v(" "),s("h3",{attrs:{id:"window"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#window"}},[t._v("#")]),t._v(" Window")]),t._v(" "),s("p",[t._v("window是在浏览器中代表全局作用域，所有在全局作用域下声明的变量和内容最终都会变成window对象下的属性，比如：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])])]),s("p",[t._v("访问未声明的变量时，直接访问会报错，如果通过window访问则会报undefined")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Uncaught ReferenceError: name is not defined at <anonymous>:1:9")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n")])])]),s("h4",{attrs:{id:"settimeout和setinterval"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#settimeout和setinterval"}},[t._v("#")]),t._v(" setTimeout和setInterval")]),t._v(" "),s("p",[t._v("setTimeout和setInterval他们都可以接受两个参数，第一个参数为回调函数，第二个参数是等待执行的时间，在等待时间结束之后，就会将回调函数放到event loop中进行执行（关于event loop 会单独抽一小节讲解），他们都会返回一个id，传入clearTimeout和clearIntervel能够清除这次定时操作。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" timer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeoute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'执行-----'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),t._v(" "),s("h4",{attrs:{id:"alert-confirm-prompt等交互性api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#alert-confirm-prompt等交互性api"}},[t._v("#")]),t._v(" alert，confirm，prompt等交互性API")]),t._v(" "),s("p",[t._v("alert 会弹出一个警告框，confirm和prompt可以和用户交互，confirm会弹出一个确认框，最终返回true(用户点击确定)，false(用户点击取消)，而prompt可以让用户输入一段文字，最终返回用户输出结果。")]),t._v(" "),s("p",[t._v("使用这类API执行，会导致JS停止执行，需要注意。")]),t._v(" "),s("h4",{attrs:{id:"location"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#location"}},[t._v("#")]),t._v(" Location")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/assets/img/location.jpg"),alt:"location"}}),t._v(" "),s("h5",{attrs:{id:"属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),s("ul",[s("li",[t._v("hash: 返回一个url的锚部分")]),t._v(" "),s("li",[t._v("host: 返回一个url的主机名和端口")]),t._v(" "),s("li",[t._v("hostName: 返回一个url的主机名")]),t._v(" "),s("li",[t._v("href: 当前url")]),t._v(" "),s("li",[t._v("pathname: 返回的url路径名")]),t._v(" "),s("li",[t._v("port: 返回一个url协议")]),t._v(" "),s("li",[t._v("search: 返回一个url的查询部分")])]),t._v(" "),s("h5",{attrs:{id:"方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),s("ul",[s("li",[t._v("reload: 重新载入当前页面")]),t._v(" "),s("li",[t._v("replace: 用新的页面替换当前页面")])]),t._v(" "),s("h2",{attrs:{id:"document"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#document"}},[t._v("#")]),t._v(" Document")]),t._v(" "),s("h4",{attrs:{id:"方法-选择器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法-选择器"}},[t._v("#")]),t._v(" 方法：选择器")]),t._v(" "),s("p",[t._v("选择器是浏览器知识中的重要一环， 除了getElementById, getElementsByClassName, getElementsByTagName,等早期定义的\nAPI。还有新增的querySelector, querySelectorAll等新规范增加的选择器"),s("br"),t._v("\n重点：选择器的返回值并不是数组，而是浏览器实现的一种数据结构（类数组：arrat-like object 具有length属性的对象）")]),t._v(" "),s("h4",{attrs:{id:"方法-创建元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法-创建元素"}},[t._v("#")]),t._v(" 方法：创建元素")]),t._v(" "),s("p",[t._v("document.createElement能够创建一个dom元素，在新增多个元素时，可以先在内存中拼接出所有的dom元素一次性存入，减少浏览器的回流和重绘")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" names "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小明'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小红'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小方'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fragment "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createDocumentFragment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nnames"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" li "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("'li"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  li"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHtml "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name\n  fragment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("li"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ndocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fragment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"属性-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性-2"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),s("ul",[s("li",[t._v("title: document.title 可以设置或返回当前页面的标题")]),t._v(" "),s("li",[t._v("domain: 展示当前网站的域名")]),t._v(" "),s("li",[t._v("url: 当前网站的链接")]),t._v(" "),s("li",[t._v("anchors: 返回所有的锚点，带name属性的a标签")]),t._v(" "),s("li",[t._v("forms: 返回所有的form标签集合")]),t._v(" "),s("li",[t._v("images: 返回所有的img标签组合")]),t._v(" "),s("li",[t._v("links: 返回所有的带herf属性的 a 标签")])]),t._v(" "),s("h2",{attrs:{id:"history"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#history"}},[t._v("#")]),t._v(" History")]),t._v(" "),s("p",[t._v("history对象包含用户（在浏览器窗口中）访问过的URL,在html5中， history还与客户端路由息息相关")]),t._v(" "),s("h4",{attrs:{id:"属性-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性-3"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),s("p",[t._v("length: 返回历史列表中的网址数")]),t._v(" "),s("h4",{attrs:{id:"方法-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法-2"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),s("ul",[s("li",[t._v("back: 加载history列表中的前一个url")]),t._v(" "),s("li",[t._v("forward: 加载history列表中的下一个url")]),t._v(" "),s("li",[t._v("go: 加载history列表中的某一个具体url")]),t._v(" "),s("li",[t._v("pushState:替换地址栏地址，并加入history列表，但是不会刷新页面")]),t._v(" "),s("li",[t._v("replaceState: 替换地址栏地址，替换当前页面在history列表中的记录，并不刷新页面。")])])])}),[],!1,null,null,null);a.default=e.exports}}]);